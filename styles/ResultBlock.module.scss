@import 'initial-variables.sass';
@import 'sortDialog.sass';

.block {
  background-color: white;
  display: flex;
  flex-direction: column;
  max-height: 100%;
}

h2.blockTypeH {
  display: unset;
  font-size: unset;
  margin-block: unset;
  margin-inline: unset;
  font-weight: unset;
}

.blockType {
  font-variant: small-caps;
  background-color: $grey-lighter;
  border-bottom: solid 2px $info;
  padding: 0 0.25rem;
}

.blockHeader {
  margin-bottom: 0px !important;
  display: flex;
  padding: 0 0.25rem;
  justify-content: space-between;
  align-content: center;
}

.blockHeaderTitle {
  line-height: normal;
  font-size: 1.5rem;
}

.blockHeader {
  line-height: 2.4em;
}

.blockHeader ~ .blockHeaderDate {
  padding: 0 0.25rem;
  min-height: 2.4em;
}

.blockHeader.blockHeaderArt {
  display: flex;
  justify-content: space-between;
  margin-right: -0.25rem;
  // padding-right: 0;
}

.resultHeaderIcon {
  line-height: inherit;
  margin-top: 0.6ex;
  align-self: flex-start;
  flex-grow: 0;
  flex-shrink: 0;
}

.count {
  display: flex;
  justify-content: space-between;
  align-content: center;
  font-size: 0.75rem;
  padding: 0 0.25rem;
}

.countFilter {
  display: flex;
  font-size: 0.75rem;
  padding: 0 0.25rem;
}

.resultUtilIcon {
  color: $grey;
  line-height: inherit;
  align-self: center;
  margin-right: 0.5ex;
  cursor: pointer;
}

.resultUtilIcon:hover {
  color: $info;
  line-height: inherit;
  align-self: center;
  margin-right: 0.5ex;
}

.resultUtilIconDisabled {
  color: $grey-lighter;
  line-height: inherit;
  align-self: center;
  margin-right: 0.5ex;
}

.resultBlockLoadingIcon {
  width: 60% !important;
  height: 60%;
  margin: 20%;
  color: $grey-lighter;
}

.resultItem {
  display: flex;
  padding: 0 0.25rem;
  padding: 0 .5rem 0 .25rem;
  justify-content: space-between;
  background-color: white;
  cursor:pointer;
}

// Good use case for Sass (ie. concat 'Alt' and avoid duplication
.resultItemAlt {
  display: flex;
  padding: 0 .5rem 0 .25rem;
  justify-content: space-between;
  // taken from bulma...initial-variables.sass
  // inbetween $grey-lighter and $grey-lightest
  background-color: hsl(0, 0%, 91%);
  cursor:pointer;
}

.resultItemHl {
  color: $info-invert;
  background-color: $info;
}

.resultsList {
  overflow-y: overlay;
  border-top: solid thin lightblue;
}

span.releaseTitle {
  overflow-x: hidden;
  /* white-space: nowrap; */
}

span.releaseCountry {
  display: inline-flex;
  font-size: smaller;
}

span.releaseDate {
  font-size: small;
  margin: .5ex 0 0 2ex;
}

span.trackTitle {
  flex: auto;
  margin-left: 0.5ex;
}

span.trackLength {
  font-family: monospace;
  font-stretch: condensed;
  font-size: small;
  margin: .5ex 0 0 2ex;
}

.resultHeaderImage {
  object-fit: contain;
}

.smallCoverArtLoading {
  overflow: hidden;
  display: inline-block;
  position: relative;
  width: 66px;
  height: 66px;
}

.smallCoverArtHidden {
  display:none;
}

.largeCoverArtLoading {
  display: inline-block;
  color: white;
  overflow: hidden;
  position: relative;
  width: 100%;
  box-sizing: border-box;
  margin: 0px;
  text-align: center;
}

.largeCoverArtHidden {
  visibility: hidden;
  display: none;
}

.largeCoverArtError {
  display: inline-grid;
  grid-template-columns: 1fr 2fr 1fr;
  align-items: center;
  margin: 0 20vw;
}

.countryModal {
  display: flex;
  justify-content: space-around;
}
